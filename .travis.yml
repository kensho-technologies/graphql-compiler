# In addition to building PRs, build pushes to the following branches and tag names.
branches:
  only:
  - master
  - /^v\d+\.\d+(\.\d+)?(-\S*)?$/  # tagged commits with new release versions

language: python
cache: pip
dist: bionic
services:
  - docker
before_install:
  # Add Microsoft SQL Server keys and repository info.
  - bash -c "wget -qO- https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -"
  - sudo add-apt-repository "$(wget -qO- https://packages.microsoft.com/config/ubuntu/"$(lsb_release -r -s)"/prod.list)"
  - sudo apt-get update
  # Install the ODBC driver for MSSQL, and the MySQL driver.
  - sudo apt-get install unixodbc-dev python-mysqldb
  # Install MSSQL Server 2017
  - sudo ACCEPT_EULA=Y apt-get install msodbcsql17
install:
  - pip install --upgrade pip
  - pip install --upgrade setuptools pipenv
  - pipenv install --dev --deploy --system
  # This last step will ensure that any Python version-specific dependencies
  # not covered in the pipenv lockfile are installed anyway.
  # This is a pip command rather than a pipenv command because we want to see
  # what exactly got installed here, and the pipenv version of this wouldn't output that.
  - pip install -e .
matrix:
  include:
  - name: "Lint and static analysis"
    python: "3.8"
    script:
      - pipenv run ./scripts/copyright_line_check.sh
      - pipenv run ./scripts/lint.sh
  - name: "Python 3.6 unit tests"
    python: "3.6"
    script:
      - docker-compose up -d  # Only start the database docker containers for tests, not for lint.
      - pipenv run py.test --cov=graphql_compiler graphql_compiler/tests
  - name: "Python 3.7 unit tests"
    python: "3.7"
    script:
      - docker-compose up -d  # Only start the database docker containers for tests, not for lint.
      - pipenv run py.test --cov=graphql_compiler graphql_compiler/tests
  - name: "Python 3.8 unit tests"
    python: "3.8"
    script:
      - docker-compose up -d  # Only start the database docker containers for tests, not for lint.
      - pipenv run py.test --cov=graphql_compiler graphql_compiler/tests
after_success:
  - codecov
